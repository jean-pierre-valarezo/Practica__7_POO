package ec.edu.ups.nuevapractica.vista.compositor;

import ec.edu.ups.nuevapractica.controlador.ControladorCompositor;
import ec.edu.ups.nuevapractica.modelo.Compositor;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class ListarCompositor extends javax.swing.JInternalFrame {
    private ControladorCompositor controladorCompositor;
    /**
     * Creates new form ListarCompositor
     */
    public ListarCompositor(ControladorCompositor controladorCompositor) {
        initComponents();
        this.controladorCompositor = controladorCompositor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCompositor = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tblCompositor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido", "Edad", "Nacionalidad", "Salario", "# Composiciones"
            }
        ));
        jScrollPane1.setViewportView(tblCompositor);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnSalir)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        this.actualizarTabla();
    }//GEN-LAST:event_formInternalFrameActivated

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false); 
    }//GEN-LAST:event_btnSalirActionPerformed

    private void actualizarTabla(){
        DefaultTableModel modelo = (DefaultTableModel)this.tblCompositor.getModel();
        modelo.setNumRows(0);
        List <Compositor> listaCompositores = controladorCompositor.verCompositores();
        //if (listaPersonas!=null) {
            for (Compositor listaCompositore : listaCompositores) {
                int id = listaCompositore.getCodigo();
                String nombre = listaCompositore.getNombre();
                String apellido = listaCompositore.getApellido();
                int edad = listaCompositore.getEdad();
                String nacionalidad = listaCompositore.getNacionalidad();
                double salario = listaCompositore.calcularSalario();
                int numeroComposiciones = listaCompositore.getNumeroDeComposiciones();
                Object[] rowDate = {id,nombre,apellido,edad,nacionalidad,salario,numeroComposiciones};
                modelo.addRow(rowDate);
            }
            this.tblCompositor.setModel(modelo);
        //}else{
          //  JOptionPane.showMessageDialog(this, "No se ha ingresado ningun cantante aun");
        //}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCompositor;
    // End of variables declaration//GEN-END:variables
}
